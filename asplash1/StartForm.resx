<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABJAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8/bDU04DN8ucnBqS41qKaRRtXg1wH/CTEElW281cg8TxukIWP
        96Dlmz96vjcP7qPFqVHfQ9T0qC3urIuNu48Vt3vgiHTtE0+43RzR6hCZdwH+rZWKsh9wVz9GWuC8O68H
        O1m27xnjoK9ojjt9f/ZSbUwzNceHdfaGT/rhcRR4/wDH1H5121MwVNw7N2fzTt+NiZVEl6njet2cZun8
        v5VU8e9UWgH2teVzj8q9m+A/7C/xZ/a88O+KNZ+HPhG+8Rab4ThE+oSRSRxYJDMI4t7DzZdqk+Wm5sY4
        5GfEtD8Pax4m1i8h0/T729ksInknjjjO+FVwH3DqCCenXNYYpcyvMiNCctIp6mjpf+hXwk3Ls6EH+IVe
        1S3t7gNJHIrR7uBnkexre1P4UXN38G9L8UWNjdZ0u5fT9bjZCvkODmOXPTDKdvHcADNR2fwsh+I11pcP
        h5dQkN1PDBe21ygWWAO2GkX+8gw3PbB9CKxo1KdJaefysZVKbScn0NH4meCJvhz+y9byx4bUvFVxHcXh
        RxmC0APkRHH95/nYdc7B2r5g/s5mkfduPOa+4P229b0zTPghpmi6dEFu77Vo1DgciGCOTofTc618saH8
        PdS8R6jHY6Xp95ql9cfct7SBp5pPoigsfwFeFk2dVsbhFiau822ktbRvovu38zno1uaCe3/DnAXtp9mt
        9w/Gvu6//Zih8VfsIeD/ABONUutF0jwfoLXni6ZNNkvbrTIZ0mlFxZxIR9rlaCKUeSzxeUymWZ4rVZrm
        D5D8WfCrX9C0lri+0HWrG1kTKzXFhLFGQQMHcygdwfxFfd3xx1Ga78A+A/B+j65qGk+J/Cmgrr/hCa0k
        8htOvI9jGWPbjMjgKrM2WZERCSiqo66saVVx9urpNP8Ar+n280VKqhKLl3Pyvu7uNbyf7LHcJa+a3kLM
        6vKseTtDsAAWAxkgAE5wB0oroNW0CW71S4mmt44pppXeRIYEt40csSwWOMKiKDkBUUKo4AAAFFfRRxVO
        x6ntonZjTMtwu361FLA1pcL8u3kV2UegCfHy/KByaz9d04rlVjbC9TiuOUbI5+bXUk8Ki4vobiSNWaO3
        VWmYDPlgsFBPtuIGemSB3GfrT/gnz8D9e/ah8O+MvAuh2bX1xqcthMhJxBb7JGLPK38KAKu49cEcHivm
        79njw3dePfilo/hm38xW8WTLojLGrfvPOZQhKqCW2SCOTocmMZ9a/eL9kb9mnw7+xF8KI/CPhSzivNXv
        rVJ/EerRpumv5QCoyeoUbjtUDAxzy2TyezVa8Kmii4u/ezv9918kepgcteMlyrRKzb+dz1mfxX4U/Yt+
        COh+A/ANwuh6bpxaEPDCHknlZizyMcHLFg5457AjAFfLfj/w1Zya/d6h4c0nw7odxq14brUbtLZY7jUZ
        pGUupVRxkJE7cAEoc8KM+0eOvCFvqF0YZZlWSZsSyO25BjJbrng8k5xnjnJry+80vSvDepSot8qzfaJh
        M21SzoSpDFjyAXEnCnJ2HG3YCPMzdYrHVPZTly0/u+4/XMmp4TAwU6cbzXkZei6Xfx6asN1b6ddQujec
        qWyvZvIcqIwXUB8OrAkIMnHy4PHnvi/4P+FrnVo9el+H9vZ3lpuVJrZDalo3JUO0cRwQQxO5gBjkkELn
        1S+iEPhj7RFDL/Z7JFaRWrNsyv3CAVwymTLARoAxKjBO6NRy/wAPPFJn1S+0lrVY4dYkd76Muy3EzOFJ
        yI+Y06hjwVU7QoyK8WtkvsXGEJtc2m7t/Xc9aWMo4qEvrNGM0t00jwj4V/sQ+Ef24v2nNPsl1jU7fwj4
        JtvtesSLbB47beysIwx4eSYABVIHyh25CkH640L9ov8AZ5/4J3TyeH/hf4X0Dw5qKs8FxqUkX2rVL0ts
        LoZ3zKykhMqp2DaOFArr/hB4T8NfBz4Lx6LoH2e1N1M1/fSj713dMgDSE5yxICqCSNq+mAK+J/25fgrZ
        6r45sdet9FvL7U4WEC3yRu0ZBJJEa9NoyedpbJPKkV9THBzwGAUsPaLUVd2u/RHw1LA5bLGclCjywu7L
        9Xe7+V9D9CZ/jFov7avwl1TQ/E9tZy6bq1s0RW4tUuVXI4YIysrMrYYZVgGUHBxX4YftmePP+EG/a905
        9LmNxD4FiisYmznzI1OGB/3k9u/Sv0c8NfGpfgR+y5falNPDb391LHpGmRiMM1zdzHGEyfn8tN7nggBO
        e1fj38QdUub34i69JezfaLs6hOJZMY3kOV4HYYAwPSvPrZlLEUqUKjfPbm+Wy/G58hxZhaFPFqnTt7t/
        xNj9oX4SOvxMudQ0K1a40nXo01S3MY+VRLkkf99An8aK7T4P/HvT/DngiDT9Vha4ks3aOBv7sR+YD8CW
        op+5L3vaW8rbHyaqSj7tjD0jQ43LySDcOw96v3/gz7bHceXD5ghQO6r1wO+PbipdH1KKS3G1cc857eta
        0erPo80N9bPtmjbcrEZAPXB9QRwR3Ga+olJcmh6nsdD6x/4Iq/st2s3ifxN8XNWs7WbS/C1o9hp27LSi
        9fDF1AOBtXH3hnLAjHU/pr4E1qHw/wDAltQMiHWfEF0jSeaNzwF1DCIE4PyDOR257Yryv9hvwZoHwl/4
        JwaXqUlgtvP4pgbWUt44w20zAuFA3fOBtYrnBwwHTBryf9h/9q7Wv2/Phxe+MltVs18K6xfabd29rGyw
        S3K7JElwTkHypIsoSSp3r6V3U6MY0Vp70lt2vv8Acj6jK48lGK2je78/L7z6L8BeHF8deI3mnkX7LBKx
        kDjaC/zEsfryfx4FeR/tq+GNP+H+lzaqt1AIMtNGqfu4hGxVWlLDB52g7m4PIBJLGvLPiJ+3dD+wT4X1
        bVPG0d3Nb3UskloIFWWW7YgLtCDGW3NgDgYIx0rzfw9+1f4N/wCCl/iy48O2dr4j0Xx9p1suoRbpYbyC
        WL5CQksU8kBKlo8qSrLwCo7cs8HTng3TSXO/wZ9FQxlSnjVUb9xdtbr+tzuZfjCdT0G3M155N1cRsLKx
        UskAQKVOTGysFVWjjyrOMjChceZWFY+P7621yyuptPe1eOdoRHZlStxt2rtfIDgAlfkWNyFyWwSWX2Hw
        7+xvqfw5aG4upLhdSu0bzpdqzSEcY+UBjxjjeSCWJJJAqt4x+E+n+GYpdRaNrW8hQzz6hLcPHcXYwVEX
        moCuC524L7QfWvFxmSVXTWux7WHzrDObile/9fccv8Tf2gvEnwv8Nrr+oWOm6x9lK/ahZIsZhXHBkBDK
        oByQSTkkZ5xWt8FfjRa/tK6RFqh0W1kuplKpFc3KtNEM/eLjdjPAwFA4H0r4++NnxBn1z45aT4c0FrbU
        m1oeVdNfX326xIB3STfKFjcRpuYkAn5VBIyCfIP2Pf2zL/4K/FSaa8VdNtbiRkmhj8yKO2IJB25LEAMC
        Dnd27dPEjmVadd4dO/KlzLyd0n96a+R6X9n4dxcY29pZSS2dne332dvQ+z/+CmHgTW/B3jf4W7rZbfwv
        a3KRxRpJCcTMTJK7AKHGcIoO3GF6DNfmX4x05tX8aas8cZ864v5tqIMliZDj8Sa/WfX/ANqT4f8A7b37
        OlvHcNa3HiDQLrzLeNwi3dpOpO5FJzjI5VhkPyM7lYD5X+EX7J1p4S+J1z4u1q4jNnY3Zu7C0Qq4lG8v
        5shx8oVckL1yM8dK681oqhWdeCv7l7X6q2n4JaH43xBl9elN42onyt2b897fNbHgN/8AAjxF8HdN0qz1
        bTYWvNUsk1MxNCXkt0kZgiPxw21Q2O24CivRPFvww+I37VfiO98aW0NxPY6hPIlph2AjhVyFUAdMD+dF
        crw/O+eMXZ+TPDjKVtn/AF8jx7w7r1uLNYdQsTNt/wCW0EvkTA9BklWVv++cnruzk12fhHTNN8SXEcNt
        rLxM7AGG906VfPweVTyvMUn3Zkx6jORL4J8LNawzLLa20kMb+YytaQyyScqoCvIjbckj1AGTgng/TP7O
        Pga8t5BcRtpegrMAxXTNIhBB9GkK+YeucbiufToPusPlk5tWPTi76H3Po2vNq2l/AXwnBHe6PoK6TBO0
        un6eJ97pGkaRsis6xoxc53EgZGCTgj0bwV8Y/gz8N9f1L4RfD2ztbddFVmu4dPiVEuZAcvtcAK75JDY6
        FSMYAFfPvhLSpLix0MyaveWV1osksVtqjafG0unpOjIZ49/yh4nIlUk/wkYxX4+/Cc/HjwT+15Z+C9a1
        FNL/AOEf1YTXutsglt5rcMyB4XJCSRzJ90E8Fhu27Wx7WGw6pyk6m7enpZf5Ht1K/PShCGyWvrd/5n7Y
        /tS/8E+vh7+3N4FaHxFtht7GRpLNZCZY4pScB3QY3DgjPoxI7V8U+Pf2brr/AIJc+Gby68I6MsljqF7D
        Lq2u/bRqWoTwq6kpGD5flx/KOAhJ4yTtDL9LeDP2lPDej/aLjVvFWntHsA+ztcbVXPyhjtwjEnOcKrEg
        gA7Sa+b/APgoR+1/4Y8R+ApNN0ObQdXkll+zfu5VgjiZshly0g2sRkKHB3Dd65HLmmEVWm5JuLXZ/od2
        T410q0YSSkr9Uvz/AKR9u/D/APaQX41/DbSdYtNUij0nULVZQLpCjSAqDyMHbnpkA+g5rivi54sj0/Rb
        yRVuolZTieKLH2kEY3E/LgZJG5mI6ZxwB8k/s8ftH+FPgx8ItK0efWL6G5EGBC0qXBiJUtmSRVVY0HOS
        yKoGcBsV4J8e/wDgqXrWqeN28NfDyOx8Q3ygh/IdpLhByCwACw8dTnp3x38uGInKinU3tr+u+x1VqVOn
        Wl7N2inu+x6beaxous/tL3drb6jDe3UPh+e7uTHdLIzyI8UOZIwmEI80kFXwct8tfHPif4Z3h8b/ABA8
        YXTNo/hXT9XvxDJJhpL+Y3DxxJAhHKtMyBpDgKu/AkKkHnfhB+2FrP8Aw1BBqviK9hu7rVrR9EmeO5Es
        b71BiO8MyEiVYxuB5DHJyOPX/DMOuftN+J9Ntbnwvrc/hHT9t7Eb+MaemtXh4RiJGV2hjUuQB99n+b5V
        AP5fm8cTlec1cfK0aM4QvJtaJOV1G9k5PZX2ve1k7eRmWeYjBZkq8GuRxinLyTbaWvxPZdr3t1Oa+APw
        k8W/EDxPLrlmx0/Qb51W41K5ZlR2yM+WoO6Y/wAPy8ZXBkHFfVvhbx/deLvgzrmiag//AAjMk6eRYSaz
        dr9seM4VzMoJdGZRkgqNuQPmIzXh/wAU00/xn4mht5tb8H6jpmm24t4rVdfmS2t5Ax3MscAjVuMLuWXo
        BjAGKr/D39mLS7/xAt1PcaPqWnF95sbC3uFUr3HmNdSye33h9K8+vxBVxF6+IqxpJpcqcJSSXm4vWTVr
        tpJdFu3x4jjDE4yM8JWdKFKWympy5db3vBN817b6LsfTPwI+2fCXwN/ZNr4smuofPaYG1tlaGPKqNqli
        WIG3v69qK8J8Vfs320uvXDaDHo+maWxBhtpo7l5I+OQxLyEnPfd+Aor5x5pir+5mMbf4F/mfESxddSaV
        eHy/4Y6Dww6WsayHDBnIZT/EOuPzA+hr6y+BGoRt4VtpLOQLMuMnoSufmHBHJXIBz1x24r5Bs/8Aj0t/
        +B19Hfs5f8i+v4/1r+o8HNtWPocPUfNqe6ao1rrPh29h8y3u7K8ieOR2j8yOZRwVYNxweqNjBGDgivgD
        43+GvCvj3w14g8F69qw8GePoJ2fStZkK/ZNVhciUwsxG2J+XK7HPl+YQz5dQPsfwv/yFPFH/AGE0/wDS
        WKvzV/4Kbf8AJZrb/rlb/wDo9qqNR1aact7tfc2r/hc9HB4qpGV4O2/+R0Xhf9nD4UyeGJtSvfF15rWq
        RonmR3N0iW8se0KyEdy20kMCMkbuTXiP7aD+DfB/hzQLHQ5Ple3M9vNKSDd27SMmNu0co0TROFZcFSCC
        Pu+IaT/yR68/69If/SqGsLx3/wAk88Mf9dZ//Sezry3hpTxCquT7WWz6nUrQqKqt7W8tf1R1/wAIfCL6
        vpH2rXteutJ8N3jkJY2RPn6gAcHA52rkY3EEnacD+Kvf/BnjnwvY+Gbvw+kek+DfDjQbbsNdFLyaInbu
        kKEuuc7PMdifmADAkV8++Gf+Sd23/Xqn/s9c78Kf+PhP+wqn/ouSvncyylZjzSqTcYweiWiunv2v5tO3
        Sx49ajPFzftZuy6I+rvCXxN8P/DYLceCPhNex7EZo9UvLL7EJVG350kIlnkj/eA5G3IPGSQD5n+0N+0p
        8UPiat1pUk2k+EtDvEKmzXVLWyuLyMjGZWecyENzlFO3B2ndjNVf2O/+S72H/YR1H/0W9dd+3r/yQjT/
        APsOj/0S9efhMhwWHzSCqU1Um1dTnzSkrN/zSavpukrdDklRoUMfCjKHM5K/M22199/0PmuTwm2i6Z9o
        mvtBmkVxGIYbuOeQ574TqPXB4/Out+Et/FZa9azJCdsZHmFiAIuOGXvg8etebj/jzj/3T/OvQfhN/wAh
        mH/eb/2Wv0undNJu59C5Wd0fot8I/wBoJtJ8EW0NzJ5jLyv2j94yrgcZODgHPFFeQ+Av+RJ0r/r3X+tF
        fnGNyHCSxE24Ld9EfuGBjRnh4TnTi20ruy7eh//Z
</value>
  </data>
</root>